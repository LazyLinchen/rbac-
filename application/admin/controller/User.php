<?php
/**
 * Created by PhpStorm.
 * User: 11937
 * Date: 2017/4/26
 * Time: 21:49
 */
namespace app\admin\controller;
use app\admin\controller\Common;
use Codeception\Command\Shared\Config;
use think\Db;

class User extends Common{
    /**
     * 初始化控制
     */
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    function article(){
        if($this->has('keyword', 'get'))
            $where['title|label'] = array('like', '%'.$this->param('keyword', 'get').'%');
        if(!session(config('auth.ADMIN_AUTH_KEY'))==='1')
            $where['a.u_id'] = userId();
        $list = Db::name('Article')
                ->alias('a')
                ->join(config('database.prefix').'Article_Classifty ac', 'a.ac_id = ac.id')
                ->join(config('database.prefix').'user u', 'a.u_id = u.id')
                ->field('a.*,u.name,ac.cname')
                ->order('a.u_id, a.create_time')
                ->paginate(20);
        $this->assign(['list'=>$list, 'keyword'=>$this->param('keyword', 'get')]);
        return $this->fetch();
    }

    function addArticle(){
        if($this->isPost()){
            $post = $this->post();
            $post['u_id'] = userId();
            if(empty($post['thumb']))
                unset($post['thumb']);
            if(!empty($this->file('thumb'))){
                $thumb = img_upload($this->file('thumb'));
                if($thumb['status']==1){
                    $post['thumb'] = $thumb['saveName'];
                }else{
                    $err_msg = $thumb['error_msg'];
                }
            }
            if($this->has('thumb_del', 'post')){
                if(file_exists($post['thumb']))
                    unlink($post['thumb']);
                $post['thumb'] = '';
                unset($post['thumb_del']);
            }
            Db::startTrans();
            $data['content'] = $post['content'];
            unset($post['content']);
            try{
                if(is_numeric($post['id'])){
                    $where['id'] = $post['id'];
                    unset($post['id']);
                    $post['update_time'] = nowDate();
                    Db::name('Article')->where($where)->update($post);
                    Db::name('ArticleContent')->where("article_id = ".$where['id'])->update($data);
                }else{
                    unset($post['id']);
                    $post['create_time'] = nowDate();
                    $article_id = Db::name('Article')->insertGetId($post);
                    $data['article_id'] = $article_id;
                    Db::name('ArticleContent')->insert($data);
                }
                Db::commit();
                return array('status'=>1, 'info'=>'文章操作成功!', 'url'=>url('admin/User/article'));
            }catch(\Exception $e){
                Db::rollback();
                return array('status'=>0, 'info'=>'文章操作失败！');
            }
        }else{
            $id = $this->param('id', 'get');
            if(is_numeric($this->param('id', 'get'))){
                $info = Db::name('Article')
                        ->alias('a')
                        ->join('ArticleContent ac', 'a.id = ac.article_id')
                        ->where("a.id = $id")
                        ->find();
                $this->assign('info', $info);
            }
            $where['status'] = 1;
            $where['u_id'] = userId();
            $article_classifty = Db::name('ArticleClassifty')->where($where)->order('sort')->select();
            $this->assign(['article_classifty'=>$article_classifty]);
            return $this->fetch();
        }
    }

    function ajax_upload(){
        if($this->isPost()){
            halt($this->post());
        }
    }

    function articleClassifty(){
        if($this->has('keyword', 'get'))
            $where['cname'] = array('like', '%'.$this->param('keyword', 'get').'%');
        if(!session(config('auth.ADMIN_AUTH_KEY'))==='1')
            $where['a.u_id'] = userId();
        $list = Db::name('ArticleClassifty')->alias('a')->join(config('database.prefix').'user u', 'a.u_id = u.id')->where($where)->field('a.id, a.cname, a.status, u.name')->order('a.u_id, a.sort')->paginate(20);
        $this->assign(['list'=>$list, 'keyword'=>$this->param('keyword','get')]);
        return $this->fetch();
    }

    function addArticleClassifty(){
        if($this->isPost()){
            $post = $this->post();
            $post['u_id'] = userId();
            if(is_numeric($post['id'])){
                $where['id'] = $post['id'];
                unset($post['id']);
                if(Db::name('ArticleClassifty')->where($where)->update($post)){
                    return array('status'=>1, 'info'=>'修改文章分类成功！', 'url'=>url('ArticleClassifty'));
                }else{
                    return array('status'=>0, 'info'=>'修改文章分类失败！');
                }
            }else{
                unset($post['id']);
                if(Db::name('ArticleClassifty')->insert($post)){
                    return array('status'=>1, 'info'=>'添加文章分类成功！', 'url'=>url('ArticleClassifty'));
                }else{
                    return array('status'=>0, 'info'=>'添加文章分类失败！');
                }
            }
        }else{
            $id = $this->param('id', 'get');
            if(is_numeric($this->param('id', 'get'))){
                $info = Db::name('ArticleClassifty')->where("id = $id")->find();
                $this->assign('info', $info);
            }
            return $this->fetch();
        }

    }

    function changeStatus(){
        $arr = array('ArticleClassifty',  'Article');
        if(!in_array($this->param('model'), $arr))  return array('status'=>0, 'info'=>'非法操作');
        $model = $this->param('model');
        if(!is_numeric($this->param('id')) && !$this->post('ids'))  return array('status'=>0, 'info'=>'非法操作');
        /*判断是否多条操作*/
        if($ids = $this->post('ids')){
            $ids = mb_substr($ids, 0, -1);
        }
        if($this->param('id'))  $map['id'] = $this->param('id');
        if($ids)    $map['id'] = array('in', $ids);
        switch ($this->post('type')) {
            case 'stop':
                $status = 0;
                break;
            case 'start':
                $status = 1;
                break;
            case 'del':
                $status = 10;
                break;
            default:
                return array('status'=>0, 'info'=>'非法操作');
                break;
        }
        if(Db::name($model)->where($map)->setField('status', $status)){
            return array('status'=>1, 'info'=>'操作成功！');
        }else{
            return array('status'=>0, 'info'=>'操作失败！');
        }
    }

    function top(){
        if($this->isPost() && is_numeric($this->param('id', 'get'))){
            $id = $this->param('id', 'get');
            $top = $this->post('top');
//            halt($top);
            if(Db::name('Article')->where("id = ".$id)->setField('top', $top)){
                return array('status'=>1, 'info'=>'操作成功');
            }else{
                return array('status'=>0, 'info'=>'操作失败');
            }

        }else{
            return array('status'=>0, 'info'=>'非法操作');
        }
    }

}